package data;

import java.util.Random;
public class Driver {
  
   private BoxSequence outputChain;
  
   
	/**
	 * @Descriprion  : Create a randomized and non-duplicated sequence of Box objects 
	 * @Parameters   : None
	 * @Precondition : None
	 * @Postcondition: The randomized and non-duplicated sequence of Box objects is created
	 * @ThrowList    : None
	 */
   public BoxSequence generateCollection(){
      
      BoxSequence boxList = new BoxSequence();    
      Random random = new Random();
      
      Box temp;
      while(boxList.getCount() < 5) {
      	 
    	 int x = random.nextInt(5);
     	 int y = random.nextInt(5);
     	 
     	 temp = new Box(x,y,null);
     	 boolean existed = false;

     	 for(Box cursor = boxList.getHead(); cursor != null; cursor = cursor.getLink())
     		 if(temp.equals(cursor))
     			 existed = true;
     	 
     	 if(existed == false) {
     		 boxList.add(temp);
     	 }
      }
      outputChain = boxList;
      
      return outputChain;
      
    }

	/**
	 * @Descriprion  : Compare the current sequence of Box objects generated by program
	 * 				   to the sequence of Box objects selected by player
	 * @Parameters   : inputChain - the sequence of boxes selected by player
	 * @Precondition : the two sequences are not null
	 * @Postcondition: if two sequences are equal return true, else false
	 * @ThrowList    : None
	 */
  	public boolean compare (BoxSequence inputChain) {
  		
  		// Check the number of elements
  		if(outputChain.getCount() != inputChain.getCount())
  			return false;
  		else {
  			
  			Box inCursor = inputChain.getHead();
  			Box outCursor = outputChain.getHead();
  		
  			// Compare each elements in two sequence
  			for(int i=0;i<outputChain.getCount();i++) {
  				if(!inCursor.equals(outCursor))
  					return false;
  				inCursor = inCursor.getLink();
  				outCursor = outCursor.getLink();
  			}
  			return true;
  		}
  	}
    
}
